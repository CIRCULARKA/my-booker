// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyBooker.Infrastructure.Database.Contexts;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MyBooker.Infrastructure.Database.Migrations
{
    [DbContext(typeof(MyBookerDbContext))]
    partial class MyBookerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MyBooker.Core.Accounting.Entities.ExpenseCategoryEntity", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("ID")
                        .HasName("pk_expense_category");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_expense_category_name");

                    b.ToTable("expense_category", (string)null);
                });

            modelBuilder.Entity("MyBooker.Core.Accounting.Entities.ExpenseEntity", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<float>("Amount")
                        .HasColumnType("real")
                        .HasColumnName("amount");

                    b.Property<Guid>("CategoryID")
                        .HasColumnType("uuid")
                        .HasColumnName("category_id");

                    b.Property<string>("ExpenseObject")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("expense_object");

                    b.Property<decimal>("Sum")
                        .HasColumnType("numeric")
                        .HasColumnName("sum");

                    b.Property<DateTimeOffset>("Time")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("time");

                    b.HasKey("ID")
                        .HasName("pk_expense");

                    b.HasIndex("CategoryID")
                        .HasDatabaseName("ix_expense_category_id");

                    b.ToTable("expense", (string)null);
                });

            modelBuilder.Entity("MyBooker.Core.Accounting.Entities.ExpenseEntity", b =>
                {
                    b.HasOne("MyBooker.Core.Accounting.Entities.ExpenseCategoryEntity", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_expense_expense_category_category_id");

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
